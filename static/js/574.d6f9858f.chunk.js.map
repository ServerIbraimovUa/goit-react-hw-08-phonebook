{"version":3,"file":"static/js/574.d6f9858f.chunk.js","mappings":"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","sources":["components/App.styled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","redux/auth/authSelectors.js","utils/notify.js","utils/togglePassword.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 15px;\n  .title {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.2em;\n    margin-top: 1em;\n  }\n`;\n\nexport const DivStyle = styled.div`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5em;\n  margin-top: 2em;\n`;\n","import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1em auto;\n  gap: 1em;\n  width: 400px;\n  label {\n    position: relative;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.1em;\n  }\n  span {\n    margin-left: 0.5em;\n  }\n\n  .eye-password {\n    position: absolute;\n    font-size: 24px;\n    margin-left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n    bottom: 8px;\n    right: 8px;\n    cursor: pointer;\n  }\n\n  input {\n    border: none;\n    padding: 0.3em 0.5em;\n    border-radius: 1em;\n  }\n\n  button {\n    width: 50%;\n    padding: 0.3em 0.3em;\n    border: none;\n    border-radius: 1em;\n    background-color: #53cccc;\n    &:hover,\n    &:focus {\n      scale: 1.1;\n    }\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { Container } from 'components/App.styled';\nimport { FormStyle } from './RegisterForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signUp } from 'redux/auth/auth';\nimport { selectError, selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { Navigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { RiEyeLine, RiEyeOffLine } from 'react-icons/ri';\nimport { toggleClick } from 'utils/togglePassword';\nimport { notifyError } from 'utils/notify';\n\nconst schema = yup\n  .object({\n    name: yup.string().min(6).max(24).required(),\n    email: yup.string().min(6).max(30).required(),\n    password: yup.string().min(8).max(12).required(),\n  })\n  .required();\n\nconst RegisterForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const isLogedIn = useSelector(selectIsLoggedIn);\n  const error = useSelector(selectError);\n  const [toggleInput, setToggleInput] = useState('password');\n  const [toggleIcon, setToggleIcon] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(signUp(data));\n    reset();\n  };\n  if (error) {\n    notifyError('Please write correct data !');\n  }\n\n  return (\n    <Container>\n      {isLogedIn && <Navigate to=\"/contacts\" replace />}\n      <FormStyle onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Name</span>\n          <input\n            type=\"text\"\n            placeholder=\"User Name\"\n            {...register('name', { required: true })}\n          />\n          <span>{errors.name?.message}</span>\n        </label>\n        <label>\n          <span>Email</span>\n          <input\n            type=\"email\"\n            placeholder=\"user@gmail.com\"\n            {...register('email', { required: true })}\n          />\n          <span>{errors.email?.message}</span>\n        </label>\n        <label>\n          <span>Password</span>\n          <input\n            type={toggleInput}\n            {...register('password', { required: true })}\n          />\n          <span\n            className=\"eye-password\"\n            onClick={() =>\n              toggleClick(toggleInput, setToggleInput, setToggleIcon)\n            }\n          >\n            {toggleIcon ? <RiEyeOffLine /> : <RiEyeLine />}\n          </span>\n          <span>{errors.password?.message}</span>\n        </label>\n        <button type=\"submit\">Submit</button>\n      </FormStyle>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n","export const selectIsLoggedIn = state => state.auth.isLoggedIn;\nexport const selectLoading = state => state.auth.isLoading;\nexport const selectError = state => state.auth.error;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n","import { toast } from 'react-toastify';\nexport const notifyError = text =>\n  toast.error(text, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n\nexport const notifySuccess = text => {\n  toast.success(text, {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n  });\n};\n","export const toggleClick = (toggle, setInput, setIcon) => {\n  if (toggle === 'password') {\n    setIcon(true);\n    return setInput('text');\n  }\n  if (toggle === 'text') {\n    setIcon(false);\n    return setInput('password');\n  }\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","DivStyle","_templateObject2","FormStyle","schema","yup","name","min","max","required","email","password","_errors$name","_errors$email","_errors$password","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","isLogedIn","useSelector","selectIsLoggedIn","error","selectError","_useState","useState","_useState2","_slicedToArray","toggleInput","setToggleInput","_useState3","_useState4","toggleIcon","setToggleIcon","dispatch","useDispatch","notifyError","_jsxs","children","_jsx","Navigate","to","replace","onSubmit","data","signUp","_objectSpread","type","placeholder","message","className","onClick","toggleClick","RiEyeOffLine","RiEyeLine","RegisterForm","state","auth","isLoggedIn","selectLoading","isLoading","selectUser","user","text","toast","position","autoClose","hideProgressBar","pauseOnHover","draggable","progress","undefined","theme","toggle","setInput","setIcon"],"sourceRoot":""}