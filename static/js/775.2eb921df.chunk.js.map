{"version":3,"file":"static/js/775.2eb921df.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6PAetBC,EAAWH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sI,2HCfrBG,E,QAAYL,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,60B,qEC2DpC,EAlDkB,WAChB,IAAAI,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAClBC,GAAsCC,EAAAA,EAAAA,UAAS,YAAWC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAWC,EAAAA,EAAAA,MAcjB,OACEC,EAAAA,EAAAA,KAACvB,EAAAA,EAAS,CAAAwB,UACRC,EAAAA,EAAAA,MAACnB,EAAS,CAACoB,SAAUhB,GAdR,SAAAiB,GACfN,GAASO,EAAAA,EAAAA,IAAMD,IACZE,SACAC,MAAK,SAAAC,GAAA,IAAGC,EAAID,EAAJC,KAAI,OACXC,EAAAA,EAAAA,GAAc,6BAADC,OAA8BF,EAAKG,MAAO,IAExDC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,IACZG,EAAAA,EAAAA,GAAY,6CACd,GACJ,IAIgDhB,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,WACND,EAAAA,EAAAA,KAAA,SAAAkB,EAAAA,EAAAA,GAAA,CACEC,KAAK,QACLC,YAAY,kBACRlC,EAAS,QAAS,CAAEmC,UAAU,UAGtCnB,EAAAA,EAAAA,MAAA,SAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,QAAAC,SAAM,cACND,EAAAA,EAAAA,KAAA,SAAAkB,EAAAA,EAAAA,GAAA,CACEC,KAAM3B,GACFN,EAAS,WAAY,CAAEmC,UAAU,OAEvCrB,EAAAA,EAAAA,KAAA,QACEsB,UAAU,eACVC,QAAS,kBACPC,EAAAA,EAAAA,GAAYhC,EAAaC,EAAgBI,EAAc,EACxDI,SAEAL,GAAaI,EAAAA,EAAAA,KAACyB,EAAAA,IAAY,KAAMzB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAS,UAG/C1B,EAAAA,EAAAA,KAAA,UAAQmB,KAAK,SAAQlB,SAAC,eAI9B,ECpDA,EAJkB,WAChB,OAAOD,EAAAA,EAAAA,KAAC2B,EAAS,GACnB,C,sGCJMC,EAAgB,CACpBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAGInB,EAAc,SAAAoB,GAAI,OAAIC,EAAAA,GAAAA,MAAYD,EAAMT,EAAe,EAEvDlB,EAAgB,SAAA2B,GAC3BC,EAAAA,GAAAA,QAAcD,GAAInB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACbU,GAAa,IAChBW,MAAO,CAAEC,gBAAiB,QAASC,MAAO,WAE9C,C,uDClBO,IAAMjB,EAAc,SAACkB,EAAQC,EAAUC,GAC5C,MAAe,aAAXF,GACFE,GAAQ,GACDD,EAAS,SAEH,SAAXD,GACFE,GAAQ,GACDD,EAAS,kBAFlB,CAIF,C","sources":["components/App.styled.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx","utils/notify.js","utils/togglePassword.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 15px;\n  .title {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.2em;\n    margin-top: 1em;\n  }\n`;\n\nexport const DivStyle = styled.div`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5em;\n  margin-top: 2em;\n`;\n","import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 1em auto;\n  gap: 1em;\n  max-width: 400px;\n  label {\n    max-width: 100%;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    gap: 0.1em;\n  }\n  span {\n    margin-left: 0.5em;\n  }\n  .eye-password {\n    position: absolute;\n    font-size: 24px;\n    margin-left: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 24px;\n    height: 24px;\n    bottom: 8px;\n    right: 8px;\n    cursor: pointer;\n  }\n\n  input {\n    border: none;\n    padding: 0.3em 0.5em;\n    border-radius: 1em;\n  }\n\n  button {\n    margin: 0 auto;\n    width: 50%;\n    padding: 0.3em 0.3em;\n    border: none;\n    border-radius: 1em;\n    background-color: #53cccc;\n    &:hover,\n    &:focus {\n      scale: 1.1;\n    }\n  }\n`;\n","import { useForm } from 'react-hook-form';\n\nimport { Container } from 'components/App.styled';\nimport { FormStyle } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth';\nimport { RiEyeLine, RiEyeOffLine } from 'react-icons/ri';\nimport { useState } from 'react';\nimport { toggleClick } from 'utils/togglePassword';\nimport { notifyError, notifySuccess } from 'utils/notify';\n\nconst LoginForm = () => {\n  const { register, handleSubmit } = useForm();\n  const [toggleInput, setToggleInput] = useState('password');\n  const [toggleIcon, setToggleIcon] = useState(false);\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(login(data))\n      .unwrap()\n      .then(({ user }) =>\n        notifySuccess(`Welcome to your PhoneBook ${user.name}`)\n      )\n      .catch(err => {\n        console.log(err);\n        notifyError('Please write the correct Email or Password');\n      });\n  };\n\n  return (\n    <Container>\n      <FormStyle onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Email</span>\n          <input\n            type=\"email\"\n            placeholder=\"user@gmail.com\"\n            {...register('email', { required: true })}\n          />\n        </label>\n        <label>\n          <span>Password</span>\n          <input\n            type={toggleInput}\n            {...register('password', { required: true })}\n          />\n          <span\n            className=\"eye-password\"\n            onClick={() =>\n              toggleClick(toggleInput, setToggleInput, setToggleIcon)\n            }\n          >\n            {toggleIcon ? <RiEyeOffLine /> : <RiEyeLine />}\n          </span>\n        </label>\n        <button type=\"submit\">Submit</button>\n      </FormStyle>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst LoginPage = () => {\n  return <LoginForm />;\n};\n\nexport default LoginPage;\n","import { toast } from 'react-toastify';\nconst toastSettings = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'light',\n};\n\nexport const notifyError = text => toast.error(text, toastSettings);\n\nexport const notifySuccess = text => {\n  toast.success(text, {\n    ...toastSettings,\n    style: { backgroundColor: 'green', color: 'white' },\n  });\n};\n","export const toggleClick = (toggle, setInput, setIcon) => {\n  if (toggle === 'password') {\n    setIcon(true);\n    return setInput('text');\n  }\n  if (toggle === 'text') {\n    setIcon(false);\n    return setInput('password');\n  }\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","DivStyle","_templateObject2","FormStyle","_useForm","useForm","register","handleSubmit","_useState","useState","_useState2","_slicedToArray","toggleInput","setToggleInput","_useState3","_useState4","toggleIcon","setToggleIcon","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","data","login","unwrap","then","_ref","user","notifySuccess","concat","name","catch","err","console","log","notifyError","_objectSpread","type","placeholder","required","className","onClick","toggleClick","RiEyeOffLine","RiEyeLine","LoginForm","toastSettings","position","autoClose","hideProgressBar","pauseOnHover","draggable","progress","undefined","theme","text","toast","style","backgroundColor","color","toggle","setInput","setIcon"],"sourceRoot":""}