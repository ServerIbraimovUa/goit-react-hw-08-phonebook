{"version":3,"file":"static/js/838.97978efd.chunk.js","mappings":"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","sources":["components/App.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Loading/DeleteSpinner.js","components/ContactItem/ContactItem.styled.js","components/UpdateContact/UpdateContact.styled.js","components/UpdateContact/UpdateContact.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx","utils/notify.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 900px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 15px;\n  .title {\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.2em;\n    margin-top: 1em;\n  }\n`;\n\nexport const DivStyle = styled.div`\n  font-size: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5em;\n  margin-top: 2em;\n`;\n","import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 1em auto;\n  gap: 1em;\n  max-width: 400px;\n  label {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.1em;\n  }\n  span {\n    margin-left: 0.5em;\n  }\n\n  input {\n    width: 100%;\n\n    border: none;\n    padding: 0.3em 0.5em;\n    border-radius: 1em;\n  }\n\n  button {\n    width: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.1em;\n    padding: 0.3em 0.3em;\n    border: none;\n    border-radius: 1em;\n    background-color: #53cccc;\n    &:hover,\n    &:focus {\n      scale: 1.1;\n    }\n  }\n`;\n","import { RiCalendarCheckLine } from 'react-icons/ri';\nimport * as yup from 'yup';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Contacts/contactsOperetions';\nimport { useForm } from 'react-hook-form';\nimport { FormStyle } from './ContactForm.styled';\nimport { Container } from 'components/App.styled';\nimport { notifySuccess } from 'utils/notify';\n\nconst schema = yup\n  .object({\n    name: yup.string().min(4).max(16).required(),\n    number: yup.string().min(6).max(11).required(),\n  })\n  .required();\n\nexport default function ContactForm() {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const { items } = useSelector(state => state.contacts);\n\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    if (items.find(({ name }) => name === data.name)) {\n      alert(`${data.name} is already in contacts`);\n      reset();\n      return;\n    }\n\n    dispatch(addContact(data))\n      .unwrap()\n      .then(() => notifySuccess(`Contact \"${data.name} \"successfully`));\n\n    reset();\n  };\n\n  return (\n    <Container>\n      <FormStyle onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          <span>Contact name</span>\n          <input\n            type=\"text\"\n            placeholder=\"Jacob Mercer\"\n            {...register('name', { required: true })}\n          />\n          <span>{errors.name?.message}</span>\n        </label>\n        <label>\n          <span>Number</span>\n          <input type=\"text\" placeholder=\"761-23-96\" {...register('number')} />\n          <span>{errors.number?.message}</span>\n        </label>\n        <button type=\"submit\">\n          Add\n          <RiCalendarCheckLine />\n        </button>\n      </FormStyle>\n    </Container>\n  );\n}\n","import { RotatingLines } from 'react-loader-spinner';\n\nconst DeleteSpinner = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"red\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"32\"\n      visible={true}\n    />\n  );\n};\n\nexport default DeleteSpinner;\n","import styled from 'styled-components';\n\nexport const ItemStyled = styled.li`\n  padding: 0.4em 1em;\n  display: flex;\n  align-items: center;\n  border: 1px solid #000;\n  border-radius: 30px;\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\n  span + span {\n    margin-left: 14px;\n  }\n  .wrapperBtn {\n    margin-left: auto;\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    justify-content: end;\n    gap: 0.5em;\n  }\n\n  .deleteBtn,\n  .updateBtn {\n    display: flex;\n    justify-content: end;\n    align-items: center;\n    width: 40px;\n    height: 40px;\n    background-color: transparent;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 26px;\n  }\n  .updateBtn {\n    border: 2px solid #00c006;\n    transition: all 0.3s ease-in-out;\n    font-size: 22px;\n    color: #00c006;\n    &:hover,\n    &:focus {\n      background-color: #00c006;\n      color: white;\n      box-shadow: 0px 0px 10px 5px rgba(0, 255, 0, 0.4);\n    }\n  }\n  .deleteBtn {\n    border: 2px solid #d60101;\n    transition: all 0.3s ease-in-out;\n    color: #d60101;\n\n    &:hover,\n    &:focus {\n      background-color: #d60101;\n      color: white;\n      box-shadow: 0px 0px 10px 5px rgba(255, 0, 0, 0.4);\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 4px;\n  input {\n    max-width: 200px;\n    border: none;\n    border-radius: 20px;\n    padding-left: 10px;\n  }\n\n  .saveButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n    width: 40px;\n    height: 40px;\n    border: 2px solid #007bff;\n    transition: all 0.3s ease-in-out;\n    font-size: 22px;\n    color: #007bff;\n    &:hover,\n    &:focus {\n      background-color: #007bff;\n      color: white;\n      box-shadow: 0px 0px 10px 5px rgba(0, 0, 255, 0.4);\n    }\n  }\n`;\n","import { FaRegSave } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { updateContact } from 'redux/Contacts/contactsOperetions';\nimport { FormStyled } from './UpdateContact.styled';\nimport * as yup from 'yup';\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nconst schema = yup\n  .object({\n    name: yup.string().min(4).max(32).required(),\n    number: yup.string().min(6).max(16).required(),\n  })\n  .required();\n\nconst UpdateContact = ({ id, toggleUpdate, name, number }) => {\n  const { register, handleSubmit } = useForm({\n    defaultValues: { name, number },\n    resolver: yupResolver(schema),\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = ({ name, number }) => {\n    const newContact = {\n      name,\n      number,\n      id,\n    };\n    dispatch(updateContact(newContact));\n    toggleUpdate();\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n      <input type=\"text\" {...register('name')} autoFocus />\n\n      <input type=\"text\" {...register('number')} />\n      <button className=\"saveButton\" type=\"submit\">\n        <FaRegSave />\n      </button>\n    </FormStyled>\n  );\n};\n\nexport default UpdateContact;\n","import DeleteSpinner from 'components/Loading/DeleteSpinner';\nimport { useState } from 'react';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport { FaMarker } from 'react-icons/fa';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Contacts/contactsOperetions';\nimport { ItemStyled } from './ContactItem.styled';\nimport UpdateContact from 'components/UpdateContact/UpdateContact';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [isDelete, setIsDelete] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const onDelete = id => {\n    setIsDelete(true);\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => setIsDelete(false));\n  };\n  const toggleUpdate = () => {\n    setIsUpdate(!isUpdate);\n  };\n\n  return (\n    <>\n      <ItemStyled>\n        {isUpdate ? (\n          <UpdateContact\n            id={id}\n            toggleUpdate={toggleUpdate}\n            name={name}\n            number={number}\n          />\n        ) : (\n          <>\n            <span>{name}:</span>\n            <span>{number}</span>\n          </>\n        )}\n        <div className=\"wrapperBtn\">\n          <button className=\"updateBtn\" type=\"button\" onClick={toggleUpdate}>\n            <FaMarker />\n          </button>\n          <button\n            className=\"deleteBtn\"\n            type=\"button\"\n            disabled={isDelete}\n            onClick={() => onDelete(id)}\n          >\n            {isDelete ? <DeleteSpinner /> : <RiDeleteBin6Line />}\n          </button>\n        </div>\n      </ItemStyled>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  font-size: 24px;\n  gap: 12px;\n  margin-top: 1em;\n`;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 6px 12px;\n  background-color: transparent;\n  border: 1px solid black;\n  border-radius: 1em;\n  &::placeholder {\n    color: black;\n    font-size: 16px;\n  }\n`;\n","import { Input } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/Contacts/contactFilter';\n\nconst Filter = () => {\n  const { filter } = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Input\n        placeholder=\"Search name\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useSelector } from 'react-redux';\nimport ContactItem from 'components/ContactItem/ContactItem';\nimport { List } from './ContactList.styled';\nimport { Container } from 'components/App.styled';\nimport Filter from 'components/Filter/Filter';\n\nconst ContactList = () => {\n  const { items } = useSelector(state => state.contacts);\n  const { filter } = useSelector(state => state.filter);\n  const getFilterContacts = () => {\n    if (filter === '') return items;\n\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilterContacts();\n\n  return (\n    <Container>\n      <>\n        {items.length === 0 ? <h2>Empty...</h2> : <Filter />}\n        <List className=\"sortable\">\n          {filteredContacts.map(({ name, id, number }) => {\n            return <ContactItem key={id} name={name} id={id} number={number} />;\n          })}\n        </List>\n      </>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport { useAuth } from 'hooks/useAuth';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/Contacts/contactsOperetions';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useAuth();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      dispatch(fetchContacts());\n    }\n  }, [dispatch, isLoggedIn]);\n\n  return (\n    <>\n      <ContactForm />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n","import { toast } from 'react-toastify';\nconst toastSettings = {\n  position: 'top-right',\n  autoClose: 2000,\n  hideProgressBar: false,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'light',\n};\n\nexport const notifyError = text => toast.error(text, toastSettings);\n\nexport const notifySuccess = text => {\n  toast.success(text, {\n    ...toastSettings,\n    style: { backgroundColor: 'green', color: 'white' },\n  });\n};\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","DivStyle","_templateObject2","FormStyle","schema","yup","name","min","max","required","number","ContactForm","_errors$name","_errors$number","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","items","useSelector","state","contacts","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","data","find","_ref","alert","concat","addContact","unwrap","then","notifySuccess","_objectSpread","type","placeholder","message","RiCalendarCheckLine","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","ItemStyled","FormStyled","id","toggleUpdate","defaultValues","_ref2","newContact","updateContact","autoComplete","autoFocus","className","FaRegSave","_useState","useState","_useState2","_slicedToArray","isDelete","setIsDelete","_useState3","_useState4","isUpdate","setIsUpdate","_Fragment","UpdateContact","onClick","FaMarker","disabled","deleteContact","onDelete","DeleteSpinner","RiDeleteBin6Line","List","Input","filter","value","onChange","e","setFilter","target","filteredContacts","toLowerCase","includes","length","Filter","map","ContactItem","isLoggedIn","useAuth","useEffect","fetchContacts","ContactList","toastSettings","position","autoClose","hideProgressBar","pauseOnHover","draggable","progress","undefined","theme","notifyError","text","toast","style","backgroundColor","color"],"sourceRoot":""}